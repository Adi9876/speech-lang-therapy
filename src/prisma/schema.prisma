generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Supervisor {
    id                 String           @id @default(cuid())
    email              String           @unique
    name               String?
    token              String?
    tokenExpiry        DateTime?
    password           String?
    phone              String?
    department         String?
    assignedTherapists Therapist[]      @relation("SupervisorToTherapist")
    assignedPatients   Patient[]        @relation("SupervisorToPatient")
    progressReports    ProgressReport[] @relation("SupervisorToProgressReport")
    sessionLogs        SessionLog[]
    createdAt          DateTime         @default(now())
    updatedAt          DateTime         @updatedAt
}

model Therapist {
    id               String           @id @default(cuid())
    email            String           @unique
    name             String?
    password         String?
    phone            String?
    department       String?
    specialization   String?
    city             String?
    state            String?
    workload         Int              @default(0)
    token            String?
    tokenExpiry      DateTime?
    sessionLogs      SessionLog[]
    supervisorId     String?
    supervisor       Supervisor?      @relation("SupervisorToTherapist", fields: [supervisorId], references: [id])
    assignedPatients Patient[]        @relation("TherapistToPatient")
    rating           Float?
    createdAt        DateTime         @default(now())
    updatedAt        DateTime         @updatedAt
    ProgressReport   ProgressReport[]
}

model Patient {
    id              String           @id @default(cuid())
    email           String           @unique
    name            String?
    imageUrl        String?
    password        String?
    age             Int
    phone           String?
    city            String?
    state           String?
    token           String?
    tokenExpiry     DateTime?
    therapistId     String?
    therapist       Therapist?       @relation("TherapistToPatient", fields: [therapistId], references: [id])
    sessionLogs     SessionLog[]
    supervisorId    String?
    supervisor      Supervisor?      @relation("SupervisorToPatient", fields: [supervisorId], references: [id])
    progressReports ProgressReport[]
    medicalIssue    String
    medicalRecords  String?
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @updatedAt
}

model SessionLog {
    id               String          @id @default(cuid())
    date             DateTime
    patientId        String
    patient          Patient         @relation(fields: [patientId], references: [id])
    activities       String[]
    responses        String //responses by the patient which will be updated by the therapist
    status           String
    notes            String?
    duration         String?
    patientFeedback  String?
    sessionType      String
    therapistId      String
    therapist        Therapist       @relation(fields: [therapistId], references: [id])
    createdAt        DateTime        @default(now())
    updatedAt        DateTime        @updatedAt
    ProgressReport   ProgressReport? @relation(fields: [progressReportId], references: [id])
    progressReportId String?
    supervisorId     String?
    Supervisor       Supervisor?     @relation(fields: [supervisorId], references: [id])
}

model ProgressReport {
    id                 String       @id @default(cuid())
    date               DateTime
    sessionLogs        SessionLog[]
    recommendations    String[]
    summary            String
    supervisorFeedback String
    patientId          String
    patient            Patient      @relation(fields: [patientId], references: [id])
    therapistId        String
    therapist          Therapist    @relation(fields: [therapistId], references: [id])
    activities         String[]
    responses          String
    status             String
    createdAt          DateTime     @default(now())
    updatedAt          DateTime     @updatedAt

    Supervisor Supervisor[] @relation("SupervisorToProgressReport")
}
